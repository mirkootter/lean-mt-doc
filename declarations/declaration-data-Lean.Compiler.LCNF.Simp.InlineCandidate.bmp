{"name":"Lean.Compiler.LCNF.Simp.InlineCandidate","instances":[],"imports":["Init","Lean.Compiler.LCNF.Simp.SimpM"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Simp/InlineCandidate.lean#L34-L84","name":"Lean.Compiler.LCNF.Simp.inlineCandidate?","docLink":"./Lean/Compiler/LCNF/Simp/InlineCandidate.html#Lean.Compiler.LCNF.Simp.inlineCandidate?","doc":"Return `some info` if `e` should be inlined.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Simp/InlineCandidate.lean#L28-L29","name":"Lean.Compiler.LCNF.Simp.InlineCandidateInfo.arity","docLink":"./Lean/Compiler/LCNF/Simp/InlineCandidate.html#Lean.Compiler.LCNF.Simp.InlineCandidateInfo.arity","doc":"The arity (aka number of parameters) of the function to be inlined. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Simp/InlineCandidate.lean#L15-L25","name":"Lean.Compiler.LCNF.Simp.InlineCandidateInfo","docLink":"./Lean/Compiler/LCNF/Simp/InlineCandidate.html#Lean.Compiler.LCNF.Simp.InlineCandidateInfo","doc":"Result of `inlineCandidate?`.\nIt contains information for inlining local and global functions.\n"}]}