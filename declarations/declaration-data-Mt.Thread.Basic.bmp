{"name":"Mt.Thread.Basic","instances":[],"imports":["Init","Mt.Task","Mt.Utils"],"declarations":[{"sourceLink":"https://github.com/mirkootter/lean-mt/blob/027a16555d487e46a0a00611b8039655378dfdd5/Mt/Thread/Basic.lean#L49-L52","name":"Mt.Thread.valid","docLink":"./Mt/Thread/Basic.html#Mt.Thread.valid","doc":"Small wrapper around `TaskM.valid`. A thread is considered valid\nif its underlying task is valid and ensures that it drops its\nreservation in the end.\n\nTo prove `Thread.valid`, you should unfold `Thread.valid`, for example\nusing `rw [Thread.valid]` and continue applying the validation theoreoms\nfor `TaskM.valid`, like `TaskM.valid_bind` "},{"sourceLink":"https://github.com/mirkootter/lean-mt/blob/027a16555d487e46a0a00611b8039655378dfdd5/Mt/Thread/Basic.lean#L34-L40","name":"Mt.Thread.iterate","docLink":"./Mt/Thread/Basic.html#Mt.Thread.iterate","doc":""},{"sourceLink":"https://github.com/mirkootter/lean-mt/blob/027a16555d487e46a0a00611b8039655378dfdd5/Mt/Thread/Basic.lean#L29-L32","name":"Mt.Thread.IterationResult.state","docLink":"./Mt/Thread/Basic.html#Mt.Thread.IterationResult.state","doc":""},{"sourceLink":"https://github.com/mirkootter/lean-mt/blob/027a16555d487e46a0a00611b8039655378dfdd5/Mt/Thread/Basic.lean#L24-L27","name":"Mt.Thread.IterationResult","docLink":"./Mt/Thread/Basic.html#Mt.Thread.IterationResult","doc":""},{"sourceLink":"https://github.com/mirkootter/lean-mt/blob/027a16555d487e46a0a00611b8039655378dfdd5/Mt/Thread/Basic.lean#L17-L20","name":"Mt.mk_thread","docLink":"./Mt/Thread/Basic.html#Mt.mk_thread","doc":""},{"sourceLink":"https://github.com/mirkootter/lean-mt/blob/027a16555d487e46a0a00611b8039655378dfdd5/Mt/Thread/Basic.lean#L15-L15","name":"Mt.instIsReservationReservation","docLink":"./Mt/Thread/Basic.html#Mt.instIsReservationReservation","doc":""},{"sourceLink":"https://github.com/mirkootter/lean-mt/blob/027a16555d487e46a0a00611b8039655378dfdd5/Mt/Thread/Basic.lean#L9-L12","name":"Mt.Thread","docLink":"./Mt/Thread/Basic.html#Mt.Thread","doc":"A single thread of the system. It consists of a task to\nexecute and a blocking predicate. The system only\niterates a thread if the blocking predicate holds "}]}