{"name":"Lean.Compiler.LCNF.Basic","instances":[{"typeNames":["Lean.Compiler.LCNF.Param"],"name":"Lean.Compiler.LCNF.instInhabitedParam","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Param"],"name":"Lean.Compiler.LCNF.instBEqParam","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.AltCore"],"name":"Lean.Compiler.LCNF.instInhabitedAltCore","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.LetDecl"],"name":"Lean.Compiler.LCNF.instInhabitedLetDecl","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.LetDecl"],"name":"Lean.Compiler.LCNF.instBEqLetDecl","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.FunDeclCore"],"name":"Lean.Compiler.LCNF.instInhabitedFunDeclCore","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.CasesCore"],"name":"Lean.Compiler.LCNF.instInhabitedCasesCore","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Code"],"name":"Lean.Compiler.LCNF.instInhabitedCode","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.CodeDecl"],"name":"Lean.Compiler.LCNF.instInhabitedCodeDecl","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Code"],"name":"Lean.Compiler.LCNF.instBEqCode","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.FunDecl"],"name":"Lean.Compiler.LCNF.instBEqFunDecl","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.Decl"],"name":"Lean.Compiler.LCNF.instInhabitedDecl","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Decl"],"name":"Lean.Compiler.LCNF.instBEqDecl","className":"BEq"}],"imports":["Init","Lean.Expr"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L524-L525","name":"Lean.Compiler.LCNF.markRecDecls.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.markRecDecls.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L513-L522","name":"Lean.Compiler.LCNF.markRecDecls.visit","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.markRecDecls.visit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L505-L525","name":"Lean.Compiler.LCNF.markRecDecls","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.markRecDecls","doc":"Traverse the given block of potentially mutually recursive functions\nand mark a declaration `f` as recursive if there is an application\n`f ...` in the block.\nThis is an overapproximation, and relies on the fact that our frontend\ncomputes strongly connected components.\nSee comment at `recursive` field.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L494-L495","name":"Lean.Compiler.LCNF.collectUsedAtExpr","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.collectUsedAtExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L478-L491","name":"Lean.Compiler.LCNF.Code.collectUsed","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.collectUsed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L458-L459","name":"Lean.Compiler.LCNF.FunDeclCore.collectUsed","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.collectUsed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L448-L455","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instCode","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L445-L446","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instFunDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L442-L443","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instLetDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L437-L440","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instAlt","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instAlt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L434-L435","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instParams","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L431-L432","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instExpr","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L428-L455","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L425-L426","name":"Lean.Compiler.LCNF.Decl.instantiateParamsLevelParams","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateParamsLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L422-L423","name":"Lean.Compiler.LCNF.Decl.instantiateTypeLevelParams","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateTypeLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L416-L420","name":"Lean.Compiler.LCNF.Decl.isCasesOnParam?.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.isCasesOnParam?.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L413-L420","name":"Lean.Compiler.LCNF.Decl.isCasesOnParam?","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.isCasesOnParam?","doc":"Return `some i` if `decl` is of the form\n```\ndef f (a_0 ... a_i ...) :=\n  ...\n  cases a_i\n  | ...\n  | ...\n```\nThat is, `f` is a sequence of declarations followed by a `cases` on the parameter `i`.\nWe use this function to decide whether we should inline a declaration tagged with\n`[inlineIfReduce]` or not.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L397-L398","name":"Lean.Compiler.LCNF.Decl.getArity","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.getArity","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L394-L395","name":"Lean.Compiler.LCNF.Decl.size","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.size","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L392-L392","name":"Lean.Compiler.LCNF.instBEqDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L392-L392","name":"Lean.Compiler.LCNF.instInhabitedDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L334-L392","name":"Lean.Compiler.LCNF.Decl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl","doc":"Declaration being processed by the Lean to Lean compiler passes.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L323-L329","name":"Lean.Compiler.LCNF.Code.forM.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.forM.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L320-L329","name":"Lean.Compiler.LCNF.Code.forM","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.forM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L312-L318","name":"Lean.Compiler.LCNF.Code.sizeLe.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.sizeLe.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L308-L310","name":"Lean.Compiler.LCNF.Code.sizeLe.inc","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.sizeLe.inc","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L303-L318","name":"Lean.Compiler.LCNF.Code.sizeLe","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.sizeLe","doc":"Return true iff `c.size ≤ n` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L294-L300","name":"Lean.Compiler.LCNF.Code.size.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.size.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L291-L300","name":"Lean.Compiler.LCNF.Code.size","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.size","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L287-L289","name":"Lean.Compiler.LCNF.Code.isReturnOf","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.isReturnOf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L283-L285","name":"Lean.Compiler.LCNF.Code.isFun","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.isFun","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L279-L281","name":"Lean.Compiler.LCNF.Code.isDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.isDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L276-L277","name":"Lean.Compiler.LCNF.AltCore.mapCodeM","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.mapCodeM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L267-L274","name":"Lean.Compiler.LCNF.CasesCore.extractAlt!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.extractAlt!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L265-L265","name":"Lean.Compiler.LCNF.FunDeclCore.updateCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.updateCore","doc":"Low-level update `FunDecl` function. It does not update the local context.\nConsider using `FunDecl.update : LetDecl → Expr → Array Param → Code → CompilerM FunDecl` if you want the local context\nto be updated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L252-L252","name":"Lean.Compiler.LCNF.LetDecl.updateCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl.updateCore","doc":"Low-level update `LetDecl` function. It does not update the local context.\nConsider using `LetDecl.update : LetDecl → Expr → Expr → CompilerM LetDecl` if you want the local context\nto be updated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L239-L239","name":"Lean.Compiler.LCNF.Param.updateCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.updateCore","doc":"Low-level update `Param` function. It does not update the local context.\nConsider using `Param.update : Param → Expr → CompilerM Param` if you want the local context\nto be updated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L226-L226","name":"Lean.Compiler.LCNF.Code.updateUnreach!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateUnreach!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L219-L219","name":"Lean.Compiler.LCNF.Code.updateJmp!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateJmp!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L212-L212","name":"Lean.Compiler.LCNF.Code.updateReturn!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateReturn!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L205-L205","name":"Lean.Compiler.LCNF.Code.updateFun!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateFun!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L197-L197","name":"Lean.Compiler.LCNF.Code.updateCont!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateCont!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L188-L188","name":"Lean.Compiler.LCNF.Code.updateLet!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateLet!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L181-L181","name":"Lean.Compiler.LCNF.Code.updateCases!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateCases!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L174-L174","name":"Lean.Compiler.LCNF.Code.updateAlts!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateAlts!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L167-L167","name":"Lean.Compiler.LCNF.AltCore.updateAlt!","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.updateAlt!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L160-L160","name":"Lean.Compiler.LCNF.AltCore.updateCode","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.updateCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L150-L153","name":"Lean.Compiler.LCNF.AltCore.forCodeM","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.forCodeM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L146-L148","name":"Lean.Compiler.LCNF.AltCore.getCode","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.getCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L143-L144","name":"Lean.Compiler.LCNF.instBEqFunDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L141-L141","name":"Lean.Compiler.LCNF.FunDecl.beq","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L138-L139","name":"Lean.Compiler.LCNF.instBEqCode","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L136-L136","name":"Lean.Compiler.LCNF.Code.beq","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L94-L101","name":"Lean.Compiler.LCNF.attachCodeDecls.go","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.attachCodeDecls.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L91-L101","name":"Lean.Compiler.LCNF.attachCodeDecls","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.attachCodeDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L88-L89","name":"Lean.Compiler.LCNF.CodeDecl.fvarId","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CodeDecl.fvarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L86-L86","name":"Lean.Compiler.LCNF.instInhabitedCodeDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedCodeDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L82-L86","name":"Lean.Compiler.LCNF.CodeDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CodeDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L76-L80","name":"Lean.Compiler.LCNF.CasesCore.getCtorNames","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.getCtorNames","doc":"Return the constructor names that have an explicit (non-default) alternative.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L71-L71","name":"Lean.Compiler.LCNF.Cases","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Cases","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L70-L70","name":"Lean.Compiler.LCNF.FunDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L69-L69","name":"Lean.Compiler.LCNF.Alt","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L67-L67","name":"Lean.Compiler.LCNF.instInhabitedCode","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L59-L67","name":"Lean.Compiler.LCNF.Code","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L57-L57","name":"Lean.Compiler.LCNF.instInhabitedCasesCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedCasesCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L52-L57","name":"Lean.Compiler.LCNF.CasesCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L49-L50","name":"Lean.Compiler.LCNF.FunDeclCore.getArity","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.getArity","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L47-L47","name":"Lean.Compiler.LCNF.instInhabitedFunDeclCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedFunDeclCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L41-L47","name":"Lean.Compiler.LCNF.FunDeclCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L39-L39","name":"Lean.Compiler.LCNF.instBEqLetDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L39-L39","name":"Lean.Compiler.LCNF.instInhabitedLetDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L34-L39","name":"Lean.Compiler.LCNF.LetDecl","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L32-L32","name":"Lean.Compiler.LCNF.instInhabitedAltCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedAltCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L29-L32","name":"Lean.Compiler.LCNF.AltCore","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L26-L27","name":"Lean.Compiler.LCNF.Param.toExpr","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.toExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L24-L24","name":"Lean.Compiler.LCNF.instBEqParam","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L24-L24","name":"Lean.Compiler.LCNF.instInhabitedParam","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Basic.lean#L19-L24","name":"Lean.Compiler.LCNF.Param","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param","doc":""}]}