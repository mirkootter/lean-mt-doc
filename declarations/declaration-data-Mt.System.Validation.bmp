{"name":"Mt.System.Validation","instances":[],"imports":["Init","Mt.System.Basic","Mt.System.BasicAux","Mt.System.Traced","Mt.Utils.List"],"declarations":[{"sourceLink":"https://github.com/mirkootter/lean-mt/blob/027a16555d487e46a0a00611b8039655378dfdd5/Mt/System/Validation.lean#L25-L65","name":"Mt.System.fundamental_validation_theorem","docLink":"./Mt/System/Validation.html#Mt.System.fundamental_validation_theorem","doc":""},{"sourceLink":"https://github.com/mirkootter/lean-mt/blob/027a16555d487e46a0a00611b8039655378dfdd5/Mt/System/Validation.lean#L21-L23","name":"Mt.System.valid","docLink":"./Mt/System/Validation.html#Mt.System.valid","doc":"Central validation predicate for reasoning about systems.\n\nA valid system has the following property: Given any future\niteration of the system (or the system itself), the following\nholds:\n* No threads have panicked yet (and they never will)\n* Its current state is valid according to the specification\n"},{"sourceLink":"https://github.com/mirkootter/lean-mt/blob/027a16555d487e46a0a00611b8039655378dfdd5/Mt/System/Validation.lean#L9-L9","name":"Mt.System.instIsReservationReservation","docLink":"./Mt/System/Validation.html#Mt.System.instIsReservationReservation","doc":""}]}