{"name":"Lean.Compiler.LCNF.Specialize","instances":[],"imports":["Init","Lean.Util.ForEachExpr","Lean.Compiler.Specialize","Lean.Compiler.LCNF.Simp","Lean.Compiler.LCNF.SpecInfo","Lean.Compiler.LCNF.PrettyPrinter","Lean.Compiler.LCNF.ToExpr","Lean.Compiler.LCNF.Level","Lean.Compiler.LCNF.PhaseExt"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L425-L430","name":"Lean.Compiler.LCNF.specialize","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.specialize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L421-L423","name":"Lean.Compiler.LCNF.Decl.specialize","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Decl.specialize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L412-L417","name":"Lean.Compiler.LCNF.Specialize.main","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.main","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L390-L408","name":"Lean.Compiler.LCNF.Specialize.visitCode","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.visitCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L386-L388","name":"Lean.Compiler.LCNF.Specialize.visitFunDecl","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.visitFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L350-L384","name":"Lean.Compiler.LCNF.Specialize.specializeApp?","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.specializeApp?","doc":"Try to specialize the function application in the given let-declaration.\n`k` is the continuation for the let-declaration.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L338-L343","name":"Lean.Compiler.LCNF.Specialize.getRemainingArgs","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.getRemainingArgs","doc":"Given the specialization mask `paramsInfo` and the arguments `args`,\nreturn the arguments that have not been considered for specialization.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L310-L332","name":"Lean.Compiler.LCNF.Specialize.mkSpecDecl.go","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.mkSpecDecl.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L296-L332","name":"Lean.Compiler.LCNF.Specialize.mkSpecDecl","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.mkSpecDecl","doc":"Specialize `decl` using\n- `us`: the universe level used to instantiate `decl.name`\n- `argMask`: arguments that are being used to specialize the declaration.\n- `params`: new parameters that arguments in `argMask` depend on.\n- `decls`: local declarations that arguments in `argMask` depend on.\n- `levelParamsNew`: the universe level parameters for the new declaration.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L280-L285","name":"Lean.Compiler.LCNF.Specialize.mkKey","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.mkKey","doc":"Create the \"key\" that uniquely identifies a code specialization.\n`params` and `decls` are the declarations collected by the `collect` function above.\nThe result contains the list of universe level parameter names the key that `params`, `decls`, and `body` depends on.\nWe use this information to create the new auxiliary declaration and resulting application.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L264-L270","name":"Lean.Compiler.LCNF.Specialize.expandCodeDecls.go","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.expandCodeDecls.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L259-L272","name":"Lean.Compiler.LCNF.Specialize.expandCodeDecls","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.expandCodeDecls","doc":"Convert the given declarations into `Expr`, and \"zeta-reduce\" them into body.\nThis function is used to compute the key that uniquely identifies an code specialization.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L246-L253","name":"Lean.Compiler.LCNF.Specialize.shouldSpecialize","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.shouldSpecialize","doc":"Return `true` if it is worth using arguments `args` for specialization given the parameter specialization information.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L230-L239","name":"Lean.Compiler.LCNF.Specialize.Collector.collect","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Collector.collect","doc":"Given the specialization mask `paramsInfo` and the arguments `args`,\ncollect their dependencies, and return an array `mask` of size `paramsInfo.size` s.t.\n- `mask[i] = some args[i]` if `paramsInfo[i] != .other`\n- `mask[i] = none`, otherwise.\nThat is, `mask` contains only the arguments that are contributing to the code specialization.\nWe use this information to compute a \"key\" to uniquely identify the code specialization, and\ncreating the specialized code.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L214-L218","name":"Lean.Compiler.LCNF.Specialize.Collector.collectExpr","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Collector.collectExpr","doc":"Collect dependencies of the given expression. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L190-L211","name":"Lean.Compiler.LCNF.Specialize.Collector.collectFVar","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Collector.collectFVar","doc":"Process the given free variable.\nIf it has not already been visited and is in scope, we collect its dependencies.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L181-L184","name":"Lean.Compiler.LCNF.Specialize.Collector.collectFunDecl","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Collector.collectFunDecl","doc":"Collect dependencies of a local function declaration. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L165-L178","name":"Lean.Compiler.LCNF.Specialize.Collector.collectCode","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Collector.collectCode","doc":"Collect dependencies in the given code. We need this function to be able\nto collect dependencies in a local function declaration.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L158-L159","name":"Lean.Compiler.LCNF.Specialize.Collector.collectParams","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Collector.collectParams","doc":"Collect dependencies in parameters. We need this because parameters may\ncontain other type parameters.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L150-L151","name":"Lean.Compiler.LCNF.Specialize.Collector.markVisited","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Collector.markVisited","doc":"Mark a free variable as already visited.\nWe perform a topological sort over the dependencies.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L144-L144","name":"Lean.Compiler.LCNF.Specialize.Collector.CollectorM","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Collector.CollectorM","doc":"Monad for implementing the code specializer dependency collector.\nSee `collect`\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L120-L138","name":"Lean.Compiler.LCNF.Specialize.Collector.State","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Collector.State","doc":"State for the `CollectorM` monad.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L63-L66","name":"Lean.Compiler.LCNF.Specialize.withLetDecl","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.withLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L59-L61","name":"Lean.Compiler.LCNF.Specialize.isGround","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.isGround","doc":"Return `true` if `e` is a ground term. That is,\nit contains only free variables t\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L52-L53","name":"Lean.Compiler.LCNF.Specialize.withFVar","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.withFVar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L49-L50","name":"Lean.Compiler.LCNF.Specialize.withParams","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.withParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L47-L47","name":"Lean.Compiler.LCNF.Specialize.SpecializeM","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.SpecializeM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L44-L45","name":"Lean.Compiler.LCNF.Specialize.State","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.State","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L29-L42","name":"Lean.Compiler.LCNF.Specialize.Context","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L26-L27","name":"Lean.Compiler.LCNF.Specialize.findSpecCache?","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.findSpecCache?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L23-L24","name":"Lean.Compiler.LCNF.Specialize.cacheSpec","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.cacheSpec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L20-L21","name":"Lean.Compiler.LCNF.Specialize.specCacheExt","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.specCacheExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/Specialize.lean#L18-L18","name":"Lean.Compiler.LCNF.Specialize.Cache","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Cache","doc":""}]}