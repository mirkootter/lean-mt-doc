{"name":"Lean.Compiler.LCNF.FixedArgs","instances":[],"imports":["Init","Lean.Compiler.LCNF.Basic","Lean.Compiler.LCNF.Types"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/e44fd19074259018b9ddcbdb00209492416bc8ac/src/Lean/Compiler/LCNF/FixedArgs.lean#L51-L57","name":"Lean.Compiler.LCNF.mkFixedArgMap","docLink":"./Lean/Compiler/LCNF/FixedArgs.html#Lean.Compiler.LCNF.mkFixedArgMap","doc":"Given the (potentially mutually) recursive declarations `decls`,\nreturn a map from declaration name `decl.name` to a bit-mask `m` where `m[i]` is true\niff the `decl.params[i]` is a fixed argument. That is, it does not change in recursive\napplications.\nThe function assumes that if a function `f` was declared in a mutual block, then `decls`\ncontains all (computationally relevant) functions in the mutual block.\n"}]}